name: 'Terraform'
on:
  push:
    branches:
      - main

env:
 # Credentials for deployment to AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #AWS defaul region
  AWS_DEFAULT_REGION: us-east-1
  # S3 bucket for the Terraform state
  BUCKET_TF_STATE: nodejs-chat-orchestrator-tfstate-s3

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    defaults:
     run:
       shell: bash
       # We keep Terraform files in the terraform directory.
       working-directory: aws/terraform-live

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Upload to S3
      run: |
        aws s3 mb s3://$BUCKET_TF_STATE
        aws s3api put-object --bucket $BUCKET_TF_STATE --key states
        aws s3api put-object --bucket $BUCKET_TF_STATE --key plans
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
      
    - name: Setup Terraform with specified version on the runner
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.0

    - name: Terraform format
      id: fmt
      run: terraform fmt -check

    - name: Terraform init
      id: init
      run: terraform init -backend-config="bucket=$BUCKET_TF_STATE" -backend-config="key=states/terraform.tfstate"

    - name: Terraform Plan
      id: plan
      run: terraform plan -var-file="dev.tfvars" -lock-timeout=10m -out=dev.plan
      continue-on-error: true

    - uses: actions/checkout@master

    - name: Archive terraform-live and plan
      uses: a7ul/tar-action@v1.1.0
      id: compress
      with:
        command: c
        cwd: ./aws
        files: |
          ./terraform-live
        outPath: ./terraform-live-dev.tar

    - name: Upload terraform-live and plan to S3
      run: |
        ls -ltr
        aws s3 cp ./terraform-live-dev.tar s3://$BUCKET_TF_STATE/plans/terraform-live-dev.tar
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}